#*****************************************************************************************
# Vivado (TM) v2024.1 (64-bit)
#
# Axku5Daq.tcl: Tcl script for re-creating project 'Axku5Daq'
#
# Generated by Vivado on Sat Oct 19 08:29:48 +0800 2024
# IP Build 5075265 on Wed May 22 21:45:21 MDT 2024
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (Axku5Daq.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/Users/lsfan/Documents/GitHub/SpinalHDL/Axku5Daq/AdiSpiCtrl.v"
#    "C:/Users/lsfan/Documents/GitHub/SpinalHDL/Axku5Daq/ChainsawDaqDataPath.v"
#    "C:/Users/lsfan/Documents/GitHub/SpinalHDL/Axku5Daq/Axku5Daq.v"
#    "C:/Users/lsfan/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Basic.xdc"
#    "C:/Users/lsfan/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Ddr4.xdc"
#    "C:/Users/lsfan/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Fmc.xdc"
#    "C:/Users/lsfan/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Pcie.xdc"
#    "C:/Users/lsfan/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/AlinxConstraintSources/MysoowFmc.xdc"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/AdiSpiCtrl.v"]"\
 "[file normalize "$origin_dir/ChainsawDaqDataPath.v"]"\
 "[file normalize "$origin_dir/Axku5Daq.v"]"\
 "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Basic.xdc"]"\
 "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Ddr4.xdc"]"\
 "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Fmc.xdc"]"\
 "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Pcie.xdc"]"\
 "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/MysoowFmc.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "Axku5Daq"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "Axku5Daq.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/Axku5Daq"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcku5p-ffvb676-2-i

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
set_msg_config  -id {[BD 41-1306]}  -suppress  -ruleid {27}  -source 2
set_msg_config  -id {[BD 41-1271]}  -suppress  -ruleid {28}  -source 2


# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcku5p-ffvb676-2-i" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/AdiSpiCtrl.v"] \
 [file normalize "${origin_dir}/ChainsawDaqDataPath.v"] \
 [file normalize "${origin_dir}/Axku5Daq.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "Axku5Daq" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Basic.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Basic.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Ddr4.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Ddr4.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Fmc.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Fmc.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Pcie.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/Axku5/Axku5Pcie.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/MysoowFmc.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../chainsaw/src/main/resources/AlinxConstraintSources/MysoowFmc.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xcku5p-ffvb676-2-i" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "Axku5Daq" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files [list AdiSpiCtrl.v]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/lsfan/Documents/GitHub/SpinalHDL/Axku5Daq/AdiSpiCtrl.v
}
if { [get_files [list AdiSpiCtrl.v]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/lsfan/Documents/GitHub/SpinalHDL/Axku5Daq/AdiSpiCtrl.v
}
if { [get_files [list ChainsawDaqDataPath.v]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/lsfan/Documents/GitHub/SpinalHDL/Axku5Daq/ChainsawDaqDataPath.v
}


# Proc to create BD Axku5Peripheral
proc cr_bd_Axku5Peripheral { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# AdiSpiCtrl, AdiSpiCtrl, ChainsawDaqDataPath



  # CHANGE DESIGN NAME HERE
  set design_name Axku5Peripheral

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:xdma:4.1\
  xilinx.com:ip:util_ds_buf:2.2\
  xilinx.com:ip:ddr4:2.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:system_ila:1.1\
  xilinx.com:ip:jesd204c:4.2\
  xilinx.com:ip:jesd204_phy:4.0\
  xilinx.com:ip:axi_dma:7.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  AdiSpiCtrl\
  AdiSpiCtrl\
  ChainsawDaqDataPath\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set pcie_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_clk ]

  set ddr4_rtl [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 ddr4_rtl ]

  set pcie_mgt [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_mgt ]

  set jesd204_refclk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 jesd204_refclk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
   ] $jesd204_refclk

  set ddr4_ref_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 ddr4_ref_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {200000000} \
   ] $ddr4_ref_clk


  # Create ports
  set pcie_link_up [ create_bd_port -dir O pcie_link_up ]
  set pcie_rstn [ create_bd_port -dir I -type rst pcie_rstn ]
  set ddr4_rst [ create_bd_port -dir I -type rst ddr4_rst ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $ddr4_rst
  set hmc7044_sclk [ create_bd_port -dir O hmc7044_sclk ]
  set hmc7044_slen [ create_bd_port -dir O hmc7044_slen ]
  set hmc7044_sdio [ create_bd_port -dir IO hmc7044_sdio ]
  set ad9695_sclk [ create_bd_port -dir O ad9695_sclk ]
  set ad9695_slen [ create_bd_port -dir O ad9695_slen ]
  set ad9695_sdio [ create_bd_port -dir IO ad9695_sdio ]
  set jesd204_rx_reset [ create_bd_port -dir I jesd204_rx_reset ]
  set jesd204_rxp [ create_bd_port -dir I -from 3 -to 0 jesd204_rxp ]
  set jesd204_rxn [ create_bd_port -dir I -from 3 -to 0 jesd204_rxn ]
  set jesd204_rx_sysref [ create_bd_port -dir I jesd204_rx_sysref ]
  set jesd204_rx_sync [ create_bd_port -dir O jesd204_rx_sync ]
  set jesd204_drpclk [ create_bd_port -dir I -type clk -freq_hz 200000000 jesd204_drpclk ]
  set hmc7044Resetn [ create_bd_port -dir O hmc7044Resetn ]
  set ad9695PowerDown [ create_bd_port -dir O ad9695PowerDown ]
  set jesd204Reset [ create_bd_port -dir O jesd204Reset ]
  set ddr4_init_done [ create_bd_port -dir O ddr4_init_done ]
  set pulse_gen_0 [ create_bd_port -dir O pulse_gen_0 ]
  set pulse_gen_1 [ create_bd_port -dir O pulse_gen_1 ]

  # Create instance: PCIe, and set properties
  set PCIe [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 PCIe ]
  set_property -dict [list \
    CONFIG.axi_data_width {256_bit} \
    CONFIG.axilite_master_en {true} \
    CONFIG.axilite_master_size {4} \
    CONFIG.en_gt_selection {true} \
    CONFIG.mode_selection {Advanced} \
    CONFIG.pf0_class_code_base {05} \
    CONFIG.pf0_class_code_interface {00} \
    CONFIG.pf0_class_code_sub {80} \
    CONFIG.pf0_sub_class_interface_menu {Generic_XT_compatible_serial_controller} \
    CONFIG.pl_link_cap_max_link_speed {8.0_GT/s} \
    CONFIG.pl_link_cap_max_link_width {X4} \
    CONFIG.select_quad {GTY_Quad_225} \
    CONFIG.xdma_rnum_chnl {1} \
    CONFIG.xdma_wnum_chnl {1} \
  ] $PCIe


  # Create instance: pcie_buffer, and set properties
  set pcie_buffer [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 pcie_buffer ]
  set_property CONFIG.C_BUF_TYPE {IBUFDSGTE} $pcie_buffer


  # Create instance: Ddr4, and set properties
  set Ddr4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ddr4:2.2 Ddr4 ]
  set_property -dict [list \
    CONFIG.C0.DDR4_AxiDataWidth {256} \
    CONFIG.C0.DDR4_CasLatency {19} \
    CONFIG.C0.DDR4_DataWidth {32} \
    CONFIG.C0.DDR4_InputClockPeriod {5000} \
    CONFIG.C0.DDR4_MemoryPart {MT40A512M16HA-075E} \
    CONFIG.System_Clock {Differential} \
  ] $Ddr4


  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: Hmc7044Ctrl, and set properties
  set block_name AdiSpiCtrl
  set block_cell_name Hmc7044Ctrl
  if { [catch {set Hmc7044Ctrl [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Hmc7044Ctrl eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: router, and set properties
  set router [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 router ]
  set_property -dict [list \
    CONFIG.NUM_CLKS {3} \
    CONFIG.NUM_MI {7} \
    CONFIG.NUM_SI {4} \
  ] $router


  # Create instance: system_ila_0, and set properties
  set system_ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila:1.1 system_ila_0 ]
  set_property -dict [list \
    CONFIG.C_DATA_DEPTH {4096} \
    CONFIG.C_MON_TYPE {NATIVE} \
    CONFIG.C_NUM_MONITOR_SLOTS {2} \
    CONFIG.C_NUM_OF_PROBES {9} \
  ] $system_ila_0


  # Create instance: Ad9695Ctrl, and set properties
  set block_name AdiSpiCtrl
  set block_cell_name Ad9695Ctrl
  if { [catch {set Ad9695Ctrl [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Ad9695Ctrl eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: JESD204, and set properties
  set JESD204 [ create_bd_cell -type ip -vlnv xilinx.com:ip:jesd204c:4.2 JESD204 ]
  set_property -dict [list \
    CONFIG.AXICLK_FREQ {200.0} \
    CONFIG.C_ENCODING {0} \
    CONFIG.C_LANES {4} \
    CONFIG.C_NODE_IS_TRANSMIT {0} \
    CONFIG.C_PLL_SELECTION {1} \
    CONFIG.GT_Line_Rate {10.0} \
    CONFIG.GT_REFCLK_FREQ {250} \
  ] $JESD204


  # Create instance: JESD204_PHY, and set properties
  set JESD204_PHY [ create_bd_cell -type ip -vlnv xilinx.com:ip:jesd204_phy:4.0 JESD204_PHY ]
  set_property -dict [list \
    CONFIG.AXICLK_FREQ {125.0} \
    CONFIG.Axi_Lite {true} \
    CONFIG.C_LANES {4} \
    CONFIG.C_PLL_SELECTION {1} \
    CONFIG.DRPCLK_FREQ {200.0} \
    CONFIG.GT_Line_Rate {10.0} \
    CONFIG.GT_Location {X0Y8} \
    CONFIG.RX_GT_Line_Rate {10.0} \
    CONFIG.RX_PLL_SELECTION {1} \
    CONFIG.TransceiverControl {false} \
  ] $JESD204_PHY


  # Create instance: jesd204_buffer, and set properties
  set jesd204_buffer [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 jesd204_buffer ]
  set_property CONFIG.C_BUF_TYPE {IBUFDSGTE} $jesd204_buffer


  # Create instance: ChainsawDaqDataPath_0, and set properties
  set block_name ChainsawDaqDataPath
  set block_cell_name ChainsawDaqDataPath_0
  if { [catch {set ChainsawDaqDataPath_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ChainsawDaqDataPath_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
   CONFIG.CLK_DOMAIN {Axku5Peripheral_jesd204_buffer_0_IBUF_DS_ODIV2} \
 ] [get_bd_intf_pins /ChainsawDaqDataPath_0/dataOut]

  # Create instance: jesd204_bufg_gt, and set properties
  set jesd204_bufg_gt [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 jesd204_bufg_gt ]
  set_property CONFIG.C_BUF_TYPE {BUFG_GT} $jesd204_bufg_gt


  # Create instance: st2mm, and set properties
  set st2mm [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 st2mm ]
  set_property -dict [list \
    CONFIG.c_include_mm2s {0} \
    CONFIG.c_s2mm_burst_size {256} \
    CONFIG.c_sg_include_stscntrl_strm {0} \
    CONFIG.c_sg_length_width {26} \
  ] $st2mm


  # Create interface connections
  connect_bd_intf_net -intf_net C0_SYS_CLK_0_1 [get_bd_intf_ports ddr4_ref_clk] [get_bd_intf_pins Ddr4/C0_SYS_CLK]
  connect_bd_intf_net -intf_net CLK_IN_D_0_1 [get_bd_intf_ports pcie_clk] [get_bd_intf_pins pcie_buffer/CLK_IN_D]
  connect_bd_intf_net -intf_net CLK_IN_D_0_2 [get_bd_intf_ports jesd204_refclk] [get_bd_intf_pins jesd204_buffer/CLK_IN_D]
  connect_bd_intf_net -intf_net ChainsawDaqDataPath_0_dataOut [get_bd_intf_pins ChainsawDaqDataPath_0/dataOut] [get_bd_intf_pins st2mm/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net PCIe_M_AXI [get_bd_intf_pins router/S00_AXI] [get_bd_intf_pins PCIe/M_AXI]
  connect_bd_intf_net -intf_net PCIe_M_AXI_LITE [get_bd_intf_pins PCIe/M_AXI_LITE] [get_bd_intf_pins router/S01_AXI]
  connect_bd_intf_net -intf_net PCIe_pcie_mgt [get_bd_intf_ports pcie_mgt] [get_bd_intf_pins PCIe/pcie_mgt]
  connect_bd_intf_net -intf_net ddr4_0_C0_DDR4 [get_bd_intf_ports ddr4_rtl] [get_bd_intf_pins Ddr4/C0_DDR4]
  connect_bd_intf_net -intf_net jesd204_phy_0_gt0_rx [get_bd_intf_pins JESD204_PHY/gt0_rx] [get_bd_intf_pins JESD204/gt0_rx]
  connect_bd_intf_net -intf_net jesd204_phy_0_gt1_rx [get_bd_intf_pins JESD204_PHY/gt1_rx] [get_bd_intf_pins JESD204/gt1_rx]
  connect_bd_intf_net -intf_net jesd204_phy_0_gt2_rx [get_bd_intf_pins JESD204_PHY/gt2_rx] [get_bd_intf_pins JESD204/gt2_rx]
  connect_bd_intf_net -intf_net jesd204_phy_0_gt3_rx [get_bd_intf_pins JESD204_PHY/gt3_rx] [get_bd_intf_pins JESD204/gt3_rx]
  connect_bd_intf_net -intf_net router_M00_AXI [get_bd_intf_pins router/M00_AXI] [get_bd_intf_pins Ddr4/C0_DDR4_S_AXI]
  connect_bd_intf_net -intf_net router_M01_AXI [get_bd_intf_pins router/M01_AXI] [get_bd_intf_pins Hmc7044Ctrl/user]
  connect_bd_intf_net -intf_net router_M02_AXI [get_bd_intf_pins router/M02_AXI] [get_bd_intf_pins ChainsawDaqDataPath_0/controlIn]
  connect_bd_intf_net -intf_net router_M03_AXI [get_bd_intf_pins router/M03_AXI] [get_bd_intf_pins Ad9695Ctrl/user]
  connect_bd_intf_net -intf_net router_M04_AXI [get_bd_intf_pins router/M04_AXI] [get_bd_intf_pins JESD204/s_axi]
  connect_bd_intf_net -intf_net router_M05_AXI [get_bd_intf_pins router/M05_AXI] [get_bd_intf_pins JESD204_PHY/s_axi]
  connect_bd_intf_net -intf_net router_M06_AXI [get_bd_intf_pins router/M06_AXI] [get_bd_intf_pins st2mm/S_AXI_LITE]
  connect_bd_intf_net -intf_net st2mm_M_AXI_S2MM [get_bd_intf_pins st2mm/M_AXI_S2MM] [get_bd_intf_pins router/S03_AXI]
  connect_bd_intf_net -intf_net st2mm_M_AXI_SG [get_bd_intf_pins st2mm/M_AXI_SG] [get_bd_intf_pins router/S02_AXI]

  # Create port connections
  connect_bd_net -net Ad9695Ctrl_csb [get_bd_pins Ad9695Ctrl/csb] [get_bd_ports ad9695_slen]
  connect_bd_net -net Ad9695Ctrl_sclk [get_bd_pins Ad9695Ctrl/sclk] [get_bd_ports ad9695_sclk]
  connect_bd_net -net ChainsawDaqDataPath_0_ad9695PowerDown [get_bd_pins ChainsawDaqDataPath_0/ad9695PowerDown] [get_bd_ports ad9695PowerDown]
  connect_bd_net -net ChainsawDaqDataPath_0_channel0Probe [get_bd_pins ChainsawDaqDataPath_0/channel0Probe] [get_bd_pins system_ila_0/probe7]
  connect_bd_net -net ChainsawDaqDataPath_0_channel1Probe [get_bd_pins ChainsawDaqDataPath_0/channel1Probe] [get_bd_pins system_ila_0/probe8]
  connect_bd_net -net ChainsawDaqDataPath_0_hmc7044Resetn [get_bd_pins ChainsawDaqDataPath_0/hmc7044Resetn] [get_bd_ports hmc7044Resetn]
  connect_bd_net -net ChainsawDaqDataPath_0_jesd204Reset [get_bd_pins ChainsawDaqDataPath_0/jesd204Reset] [get_bd_ports jesd204Reset]
  connect_bd_net -net ChainsawDaqDataPath_0_pulse0 [get_bd_pins ChainsawDaqDataPath_0/pulse0] [get_bd_ports pulse_gen_0]
  connect_bd_net -net ChainsawDaqDataPath_0_pulse1 [get_bd_pins ChainsawDaqDataPath_0/pulse1] [get_bd_ports pulse_gen_1]
  connect_bd_net -net Ddr4_c0_init_calib_complete [get_bd_pins Ddr4/c0_init_calib_complete] [get_bd_ports ddr4_init_done]
  connect_bd_net -net Hmc7044Ctrl_csb [get_bd_pins Hmc7044Ctrl/csb] [get_bd_ports hmc7044_slen]
  connect_bd_net -net Hmc7044Ctrl_sclk [get_bd_pins Hmc7044Ctrl/sclk] [get_bd_ports hmc7044_sclk]
  connect_bd_net -net JESD204_PHY_common0_qpll0_lock_out [get_bd_pins JESD204_PHY/common0_qpll0_lock_out] [get_bd_pins system_ila_0/probe0]
  connect_bd_net -net JESD204_PHY_common0_qpll1_lock_out [get_bd_pins JESD204_PHY/common0_qpll1_lock_out] [get_bd_pins system_ila_0/probe6]
  connect_bd_net -net JESD204_PHY_gt_powergood [get_bd_pins JESD204_PHY/gt_powergood] [get_bd_pins system_ila_0/probe5] [get_bd_pins jesd204_bufg_gt/BUFG_GT_CE]
  connect_bd_net -net JESD204_PHY_tx_reset_done [get_bd_pins JESD204_PHY/tx_reset_done] [get_bd_pins system_ila_0/probe4]
  connect_bd_net -net JESD204_encommaalign [get_bd_pins JESD204/encommaalign] [get_bd_pins JESD204_PHY/rxencommaalign]
  connect_bd_net -net JESD204_rx_aresetn [get_bd_pins JESD204/rx_aresetn] [get_bd_pins ChainsawDaqDataPath_0/dataRstn]
  connect_bd_net -net JESD204_rx_reset_gt [get_bd_pins JESD204/rx_reset_gt] [get_bd_pins JESD204_PHY/rx_reset_gt]
  connect_bd_net -net JESD204_rx_sync [get_bd_pins JESD204/rx_sync] [get_bd_ports jesd204_rx_sync] [get_bd_pins system_ila_0/probe1]
  connect_bd_net -net JESD204_rx_tdata [get_bd_pins JESD204/rx_tdata] [get_bd_pins ChainsawDaqDataPath_0/dataIn_tdata]
  connect_bd_net -net JESD204_rx_tvalid [get_bd_pins JESD204/rx_tvalid] [get_bd_pins ChainsawDaqDataPath_0/dataIn_tvalid]
  connect_bd_net -net M00_ACLK_1 [get_bd_pins Ddr4/c0_ddr4_ui_clk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins router/aclk1]
  connect_bd_net -net M00_ARESETN_1 [get_bd_pins proc_sys_reset_0/peripheral_aresetn] [get_bd_pins Ddr4/c0_ddr4_aresetn]
  connect_bd_net -net Net [get_bd_ports hmc7044_sdio] [get_bd_pins Hmc7044Ctrl/sdio]
  connect_bd_net -net Net1 [get_bd_ports ad9695_sdio] [get_bd_pins Ad9695Ctrl/sdio]
  connect_bd_net -net PCIe_axi_aclk [get_bd_pins PCIe/axi_aclk] [get_bd_pins router/aclk] [get_bd_pins system_ila_0/clk] [get_bd_pins JESD204/s_axi_aclk] [get_bd_pins JESD204_PHY/s_axi_aclk] [get_bd_pins st2mm/s_axi_lite_aclk] [get_bd_pins st2mm/m_axi_sg_aclk] [get_bd_pins Ad9695Ctrl/clk] [get_bd_pins Hmc7044Ctrl/clk] [get_bd_pins ChainsawDaqDataPath_0/controlClk]
  connect_bd_net -net PCIe_axi_aresetn [get_bd_pins PCIe/axi_aresetn] [get_bd_pins router/aresetn] [get_bd_pins JESD204/s_axi_aresetn] [get_bd_pins JESD204_PHY/s_axi_aresetn] [get_bd_pins st2mm/axi_resetn] [get_bd_pins Ad9695Ctrl/resetn] [get_bd_pins Hmc7044Ctrl/resetn] [get_bd_pins ChainsawDaqDataPath_0/controlRstn]
  connect_bd_net -net PCIe_user_lnk_up [get_bd_pins PCIe/user_lnk_up] [get_bd_ports pcie_link_up]
  connect_bd_net -net c0_sys_clk_i_0_1 [get_bd_ports jesd204_drpclk] [get_bd_pins JESD204_PHY/drpclk]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk_sync_rst [get_bd_pins Ddr4/c0_ddr4_ui_clk_sync_rst] [get_bd_pins proc_sys_reset_0/ext_reset_in]
  connect_bd_net -net jesd204_buffer_IBUF_DS_ODIV2 [get_bd_pins jesd204_buffer/IBUF_DS_ODIV2] [get_bd_pins jesd204_bufg_gt/BUFG_GT_I]
  connect_bd_net -net jesd204_buffer_IBUF_OUT [get_bd_pins jesd204_buffer/IBUF_OUT] [get_bd_pins JESD204_PHY/cpll_refclk] [get_bd_pins JESD204_PHY/qpll0_refclk] [get_bd_pins JESD204_PHY/qpll1_refclk]
  connect_bd_net -net jesd204_phy_0_rx_reset_done [get_bd_pins JESD204_PHY/rx_reset_done] [get_bd_pins JESD204/rx_reset_done] [get_bd_pins system_ila_0/probe3]
  connect_bd_net -net rx_reset_1 [get_bd_ports jesd204_rx_reset] [get_bd_pins JESD204/rx_core_reset] [get_bd_pins JESD204_PHY/rx_sys_reset] [get_bd_pins system_ila_0/probe2] [get_bd_pins JESD204_PHY/tx_sys_reset]
  connect_bd_net -net rx_sysref_0_1 [get_bd_ports jesd204_rx_sysref] [get_bd_pins JESD204/rx_sysref]
  connect_bd_net -net rxn_in_0_1 [get_bd_ports jesd204_rxn] [get_bd_pins JESD204_PHY/rxn_in]
  connect_bd_net -net rxp_in_0_1 [get_bd_ports jesd204_rxp] [get_bd_pins JESD204_PHY/rxp_in]
  connect_bd_net -net sys_rst_0_1 [get_bd_ports ddr4_rst] [get_bd_pins Ddr4/sys_rst]
  connect_bd_net -net sys_rst_n_0_1 [get_bd_ports pcie_rstn] [get_bd_pins PCIe/sys_rst_n]
  connect_bd_net -net util_ds_buf_0_BUFG_GT_O [get_bd_pins jesd204_bufg_gt/BUFG_GT_O] [get_bd_pins JESD204_PHY/rx_core_clk] [get_bd_pins JESD204/rx_core_clk] [get_bd_pins router/aclk2] [get_bd_pins st2mm/m_axi_s2mm_aclk] [get_bd_pins JESD204_PHY/tx_core_clk] [get_bd_pins ChainsawDaqDataPath_0/dataClk]
  connect_bd_net -net util_ds_buf_0_IBUF_DS_ODIV2 [get_bd_pins pcie_buffer/IBUF_DS_ODIV2] [get_bd_pins PCIe/sys_clk]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins pcie_buffer/IBUF_OUT] [get_bd_pins PCIe/sys_clk_gt]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI] [get_bd_addr_segs Ddr4/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x00080000 -range 0x00040000 -with_name SEG_AdiSpiCtrl_0_reg0 -target_address_space [get_bd_addr_spaces PCIe/M_AXI_LITE] [get_bd_addr_segs Ad9695Ctrl/user/reg0] -force
  assign_bd_address -offset 0x00000000 -range 0x00040000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI_LITE] [get_bd_addr_segs ChainsawDaqDataPath_0/controlIn/reg0] -force
  assign_bd_address -offset 0x00040000 -range 0x00040000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI_LITE] [get_bd_addr_segs Hmc7044Ctrl/user/reg0] -force
  assign_bd_address -offset 0x00100000 -range 0x00040000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI_LITE] [get_bd_addr_segs JESD204_PHY/s_axi/Reg] -force
  assign_bd_address -offset 0x000C0000 -range 0x00040000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI_LITE] [get_bd_addr_segs JESD204/s_axi/Reg] -force
  assign_bd_address -offset 0x00140000 -range 0x00040000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI_LITE] [get_bd_addr_segs st2mm/S_AXI_LITE/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces st2mm/Data_S2MM] [get_bd_addr_segs Ddr4/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces st2mm/Data_SG] [get_bd_addr_segs Ddr4/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force

  # Exclude Address Segments
  exclude_bd_addr_seg -offset 0x000100000000 -range 0x000100000000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI] [get_bd_addr_segs Ad9695Ctrl/user/reg0]
  exclude_bd_addr_seg -offset 0x000200000000 -range 0x000100000000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI] [get_bd_addr_segs ChainsawDaqDataPath_0/controlIn/reg0]
  exclude_bd_addr_seg -offset 0x80000000 -range 0x04000000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI] [get_bd_addr_segs Hmc7044Ctrl/user/reg0]
  exclude_bd_addr_seg -offset 0x84010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI] [get_bd_addr_segs JESD204_PHY/s_axi/Reg]
  exclude_bd_addr_seg -offset 0x84000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI] [get_bd_addr_segs JESD204/s_axi/Reg]
  exclude_bd_addr_seg -offset 0x000300000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI] [get_bd_addr_segs st2mm/S_AXI_LITE/Reg]
  exclude_bd_addr_seg -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces PCIe/M_AXI_LITE] [get_bd_addr_segs Ddr4/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK]
  exclude_bd_addr_seg -offset 0x00000000 -range 0x000100000000 -target_address_space [get_bd_addr_spaces st2mm/Data_S2MM] [get_bd_addr_segs Ad9695Ctrl/user/reg0]
  exclude_bd_addr_seg -offset 0x00000000 -range 0x000100000000 -target_address_space [get_bd_addr_spaces st2mm/Data_S2MM] [get_bd_addr_segs ChainsawDaqDataPath_0/controlIn/reg0]
  exclude_bd_addr_seg -offset 0x00000000 -range 0x000100000000 -target_address_space [get_bd_addr_spaces st2mm/Data_S2MM] [get_bd_addr_segs Hmc7044Ctrl/user/reg0]
  exclude_bd_addr_seg -offset 0x84010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces st2mm/Data_S2MM] [get_bd_addr_segs JESD204_PHY/s_axi/Reg]
  exclude_bd_addr_seg -offset 0x84000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces st2mm/Data_S2MM] [get_bd_addr_segs JESD204/s_axi/Reg]
  exclude_bd_addr_seg -offset 0x000300000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces st2mm/Data_S2MM] [get_bd_addr_segs st2mm/S_AXI_LITE/Reg]
  exclude_bd_addr_seg -offset 0x00000000 -range 0x000100000000 -target_address_space [get_bd_addr_spaces st2mm/Data_SG] [get_bd_addr_segs Ad9695Ctrl/user/reg0]
  exclude_bd_addr_seg -offset 0x00000000 -range 0x000100000000 -target_address_space [get_bd_addr_spaces st2mm/Data_SG] [get_bd_addr_segs ChainsawDaqDataPath_0/controlIn/reg0]
  exclude_bd_addr_seg -offset 0x00000000 -range 0x000100000000 -target_address_space [get_bd_addr_spaces st2mm/Data_SG] [get_bd_addr_segs Hmc7044Ctrl/user/reg0]
  exclude_bd_addr_seg -offset 0x84010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces st2mm/Data_SG] [get_bd_addr_segs JESD204_PHY/s_axi/Reg]
  exclude_bd_addr_seg -offset 0x84000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces st2mm/Data_SG] [get_bd_addr_segs JESD204/s_axi/Reg]
  exclude_bd_addr_seg -offset 0x000300000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces st2mm/Data_SG] [get_bd_addr_segs st2mm/S_AXI_LITE/Reg]


  # Restore current instance
  current_bd_instance $oldCurInst

  # bind clock domains
  set_property CONFIG.CLK_DOMAIN Axku5Peripheral_PCIe_0_axi_aclk [get_bd_intf_pins /ChainsawDaqDataPath_0/controlIn]
  set_property CONFIG.FREQ_HZ 125000000 [get_bd_intf_pins /ChainsawDaqDataPath_0/controlIn]
  set_property CONFIG.CLK_DOMAIN Axku5Peripheral_jesd204_buffer_0_IBUF_DS_ODIV2 [get_bd_intf_pins /ChainsawDaqDataPath_0/dataIn]
  set_property CONFIG.FREQ_HZ 250000000 [get_bd_intf_pins /ChainsawDaqDataPath_0/dataIn]
  set_property CONFIG.CLK_DOMAIN Axku5Peripheral_jesd204_buffer_0_IBUF_DS_ODIV2 [get_bd_intf_pins /ChainsawDaqDataPath_0/dataOut]
  set_property CONFIG.FREQ_HZ 250000000 [get_bd_intf_pins /ChainsawDaqDataPath_0/dataOut]

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_Axku5Peripheral()

cr_bd_Axku5Peripheral ""
set_property REGISTERED_WITH_MANAGER "1" [get_files Axku5Peripheral.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files Axku5Peripheral.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse [list Axku5Peripheral.bd]] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/Axku5Daq/Axku5Daq.gen/sources_1/bd/Axku5Peripheral/hdl/Axku5Peripheral_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse [list Axku5Peripheral.bd]] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcku5p-ffvb676-2-i -flow {Vivado Synthesis 2024} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2024" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xcku5p-ffvb676-2-i" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcku5p-ffvb676-2-i -flow {Vivado Implementation 2024} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2024" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xcku5p-ffvb676-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
