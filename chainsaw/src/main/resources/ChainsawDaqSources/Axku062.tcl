#*****************************************************************************************
# Vivado (TM) v2018.2 (64-bit)
#
# Axku062.tcl: Tcl script for re-creating project 'DaqTop'
#
# Generated by Vivado on Fri Jul 05 08:22:21 +0800 2024
# IP Build 2256618 on Thu Jun 14 22:10:49 MDT 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (Axku062.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "C:/Users/ltr/Documents/AXKU062/DaqTop/DaqTop.srcs/sources_1/bd/XDMA/hdl/XDMA_wrapper.v"
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/AdiSpiCtrl.v"
#    "C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/Hmc7044Ctrl.v"
#    "C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/DaqTop.v"
#    "C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/Axku062Basic.xdc"
#    "C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/Axku062Ddr4.xdc"
#    "C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/Axku062Fmc.xdc"
#    "C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/Axku062Pcie.xdc"
#    "C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/Axku062Timing.xdc"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "DaqTop"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "Axku062.tcl"

# Help information for this script
proc help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../../../../../../AXKU062/DaqTop"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcku060-ffva1156-2-i

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
set_msg_config  -ruleid {1}  -id {[BD 41-1306]}  -suppress  -source 2
set_msg_config  -ruleid {2}  -id {[BD 41-1271]}  -suppress  -source 2


# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.uses_pr" -value "1" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcku060-ffva1156-2-i" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "4" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "4" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "4" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "4" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "4" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "4" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "4" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/AdiSpiCtrl.v"] \
 [file normalize "${origin_dir}/Hmc7044Ctrl.v"] \
 [file normalize "${origin_dir}/DaqTop.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../../../../../../../AXKU062/DaqTop/DaqTop.srcs/sources_1/bd/XDMA/hdl/XDMA_wrapper.v" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "DaqTop" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/Axku062Basic.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/Axku062Basic.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/Axku062Ddr4.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/Axku062Ddr4.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/Axku062Fmc.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/Axku062Fmc.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/Axku062Pcie.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/Axku062Pcie.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/Axku062Timing.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/Axku062Timing.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/Axku062Timing.xdc"]" -objects $obj
set_property -name "target_part" -value "xcku060-ffva1156-2-i" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/Axku062Timing.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "DaqTop" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj


# Adding sources referenced in BDs, if not already added
if { [get_files AdiSpiCtrl.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/AdiSpiCtrl.v
}
if { [get_files Hmc7044Ctrl.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/ltr/Documents/GitHub/SpinalHDL/chainsaw/src/main/resources/ChainsawDaqSources/Hmc7044Ctrl.v
}


# Proc to create BD XDMA
proc cr_bd_XDMA { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# AdiSpiCtrl, Hmc7044Ctrl



  # CHANGE DESIGN NAME HERE
  set design_name XDMA

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:ddr4:2.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:axi_dma:7.1\
  xilinx.com:ip:system_ila:1.1\
  xilinx.com:ip:jesd204:7.2\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xdma:4.1\
  xilinx.com:ip:util_ds_buf:2.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  AdiSpiCtrl\
  Hmc7044Ctrl\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set M_AXI_LITE_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI_LITE_0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.PROTOCOL {AXI4LITE} \
   ] $M_AXI_LITE_0
  set S_AXIS_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_0
  set ddr4_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 ddr4_rtl_0 ]
  set jesd204_rx_data [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 jesd204_rx_data ]
  set pcie_mgt_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_mgt_0 ]
  set xdma_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 xdma_clk ]

  # Create ports
  set ad9695_csb [ create_bd_port -dir O ad9695_csb ]
  set ad9695_gpio_a0 [ create_bd_port -dir I -from 0 -to 0 ad9695_gpio_a0 ]
  set ad9695_gpio_b0 [ create_bd_port -dir I -from 0 -to 0 ad9695_gpio_b0 ]
  set ad9695_sclk [ create_bd_port -dir O ad9695_sclk ]
  set ad9695_sdio [ create_bd_port -dir IO ad9695_sdio ]
  set axi_dma_resetn [ create_bd_port -dir I -type rst axi_dma_resetn ]
  set ddr4_clk_200M [ create_bd_port -dir I -type clk ddr4_clk_200M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_RESET {ddr4_rst:jesd204_aresetn} \
   CONFIG.FREQ_HZ {200000000} \
 ] $ddr4_clk_200M
  set ddr4_done [ create_bd_port -dir O ddr4_done ]
  set ddr4_rst [ create_bd_port -dir I -type rst ddr4_rst ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $ddr4_rst
  set hmc7044_gpio3 [ create_bd_port -dir I -from 0 -to 0 hmc7044_gpio3 ]
  set hmc7044_gpio4 [ create_bd_port -dir I -from 0 -to 0 hmc7044_gpio4 ]
  set hmc7044_sclk [ create_bd_port -dir O hmc7044_sclk ]
  set hmc7044_sdata [ create_bd_port -dir IO hmc7044_sdata ]
  set hmc7044_slen [ create_bd_port -dir O hmc7044_slen ]
  set jesd204_aresetn [ create_bd_port -dir I -type rst jesd204_aresetn ]
  set jesd204_glblclk_n [ create_bd_port -dir I -type clk jesd204_glblclk_n ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
 ] $jesd204_glblclk_n
  set jesd204_glblclk_p [ create_bd_port -dir I -type clk jesd204_glblclk_p ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
 ] $jesd204_glblclk_p
  set jesd204_refclk_n [ create_bd_port -dir I -type clk jesd204_refclk_n ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
 ] $jesd204_refclk_n
  set jesd204_refclk_p [ create_bd_port -dir I -type clk jesd204_refclk_p ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
 ] $jesd204_refclk_p
  set jesd204_rx_clk [ create_bd_port -dir O -type clk jesd204_rx_clk ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {jesd204_rx_data} \
   CONFIG.ASSOCIATED_RESET {jesd204_rx_rstn} \
 ] $jesd204_rx_clk
  set jesd204_rx_reset [ create_bd_port -dir I jesd204_rx_reset ]
  set jesd204_rx_rstn [ create_bd_port -dir O -type rst jesd204_rx_rstn ]
  set jesd204_rx_sync [ create_bd_port -dir O jesd204_rx_sync ]
  set jesd204_rx_sysref [ create_bd_port -dir I jesd204_rx_sysref ]
  set jesd204_rxn [ create_bd_port -dir I -from 3 -to 0 jesd204_rxn ]
  set jesd204_rxp [ create_bd_port -dir I -from 3 -to 0 jesd204_rxp ]
  set pcie_done [ create_bd_port -dir O pcie_done ]
  set reset_probe [ create_bd_port -dir I -from 0 -to 0 reset_probe ]
  set xdma_data_clk [ create_bd_port -dir O -type clk xdma_data_clk ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {M_AXI_LITE_0:S_AXIS_0} \
   CONFIG.ASSOCIATED_RESET {axi_dma_resetn:xdma_data_rstn} \
 ] $xdma_data_clk
  set xdma_data_rstn [ create_bd_port -dir O -type rst xdma_data_rstn ]
  set xdma_rstn [ create_bd_port -dir I -type rst xdma_rstn ]

  # Create instance: AdiSpiCtrl_0, and set properties
  set block_name AdiSpiCtrl
  set block_cell_name AdiSpiCtrl_0
  if { [catch {set AdiSpiCtrl_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AdiSpiCtrl_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Hmc7044Ctrl_0, and set properties
  set block_name Hmc7044Ctrl
  set block_cell_name Hmc7044Ctrl_0
  if { [catch {set Hmc7044Ctrl_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Hmc7044Ctrl_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: control_router, and set properties
  set control_router [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 control_router ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {2} \
   CONFIG.NUM_MI {5} \
   CONFIG.NUM_SI {1} \
 ] $control_router

  # Create instance: ddr4_0, and set properties
  set ddr4_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ddr4:2.2 ddr4_0 ]
  set_property -dict [ list \
   CONFIG.C0.BANK_GROUP_WIDTH {1} \
   CONFIG.C0.DDR4_AxiAddressWidth {32} \
   CONFIG.C0.DDR4_AxiDataWidth {512} \
   CONFIG.C0.DDR4_CasLatency {15} \
   CONFIG.C0.DDR4_CasWriteLatency {11} \
   CONFIG.C0.DDR4_DataWidth {64} \
   CONFIG.C0.DDR4_InputClockPeriod {5000} \
   CONFIG.C0.DDR4_MemoryPart {MT40A512M16HA-083E} \
   CONFIG.C0.DDR4_TimePeriod {1000} \
   CONFIG.System_Clock {No_Buffer} \
 ] $ddr4_0

  # Create instance: ddr_reset_300M, and set properties
  set ddr_reset_300M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 ddr_reset_300M ]

  # Create instance: ddr_router, and set properties
  set ddr_router [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 ddr_router ]
  set_property -dict [ list \
   CONFIG.NUM_CLKS {3} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {3} \
 ] $ddr_router

  # Create instance: dma_to_ddr, and set properties
  set dma_to_ddr [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 dma_to_ddr ]
  set_property -dict [ list \
   CONFIG.c_addr_width {64} \
   CONFIG.c_include_mm2s {0} \
   CONFIG.c_include_s2mm {1} \
   CONFIG.c_include_sg {1} \
   CONFIG.c_m_axi_s2mm_data_width {128} \
   CONFIG.c_micro_dma {0} \
   CONFIG.c_s2mm_burst_size {64} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
   CONFIG.c_sg_length_width {26} \
 ] $dma_to_ddr

  # Create instance: ila_all_in_one, and set properties
  set ila_all_in_one [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila:1.1 ila_all_in_one ]
  set_property -dict [ list \
   CONFIG.ALL_PROBE_SAME_MU_CNT {2} \
   CONFIG.C_BRAM_CNT {6.5} \
   CONFIG.C_EN_STRG_QUAL {1} \
   CONFIG.C_MON_TYPE {MIX} \
   CONFIG.C_NUM_MONITOR_SLOTS {1} \
   CONFIG.C_NUM_OF_PROBES {9} \
   CONFIG.C_PROBE0_MU_CNT {2} \
   CONFIG.C_PROBE10_MU_CNT {2} \
   CONFIG.C_PROBE1_MU_CNT {2} \
   CONFIG.C_PROBE2_MU_CNT {2} \
   CONFIG.C_PROBE3_MU_CNT {2} \
   CONFIG.C_PROBE4_MU_CNT {2} \
   CONFIG.C_PROBE5_MU_CNT {2} \
   CONFIG.C_PROBE5_WIDTH {1} \
   CONFIG.C_PROBE6_MU_CNT {2} \
   CONFIG.C_PROBE6_WIDTH {1} \
   CONFIG.C_PROBE7_MU_CNT {2} \
   CONFIG.C_PROBE7_WIDTH {1} \
   CONFIG.C_PROBE8_MU_CNT {2} \
   CONFIG.C_PROBE8_WIDTH {1} \
   CONFIG.C_PROBE9_MU_CNT {2} \
   CONFIG.C_PROBE_WIDTH_PROPAGATION {AUTO} \
   CONFIG.C_SLOT {0} \
   CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_1_INTF_TYPE {xilinx.com:interface:aximm_rtl:1.0} \
   CONFIG.C_TRIGIN_EN {false} \
 ] $ila_all_in_one

  # Create instance: jesd204_0, and set properties
  set jesd204_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:jesd204:7.2 jesd204_0 ]
  set_property -dict [ list \
   CONFIG.AXICLK_FREQ {200.0} \
   CONFIG.C_DEFAULT_F {1} \
   CONFIG.C_DEFAULT_SCR {1} \
   CONFIG.C_LANES {4} \
   CONFIG.C_NODE_IS_TRANSMIT {0} \
   CONFIG.C_PLL_SELECTION {1} \
   CONFIG.GT_Line_Rate {10.0} \
   CONFIG.GT_REFCLK_FREQ {250} \
   CONFIG.Global_clk_sel {true} \
   CONFIG.SupportLevel {1} \
   CONFIG.TransceiverControl {false} \
 ] $jesd204_0

  # Create instance: jesd204_ila, and set properties
  set jesd204_ila [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila:1.1 jesd204_ila ]
  set_property -dict [ list \
   CONFIG.C_BRAM_CNT {6} \
   CONFIG.C_MON_TYPE {MIX} \
   CONFIG.C_NUM_OF_PROBES {4} \
   CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
 ] $jesd204_ila

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xdma, and set properties
  set xdma [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma ]
  set_property -dict [ list \
   CONFIG.PF0_DEVICE_ID_mqdma {9038} \
   CONFIG.PF2_DEVICE_ID_mqdma {9038} \
   CONFIG.PF3_DEVICE_ID_mqdma {9038} \
   CONFIG.axi_data_width {256_bit} \
   CONFIG.axilite_master_en {true} \
   CONFIG.axilite_master_scale {Megabytes} \
   CONFIG.axilite_master_size {1} \
   CONFIG.axisten_freq {250} \
   CONFIG.cfg_mgmt_if {false} \
   CONFIG.coreclk_freq {500} \
   CONFIG.pcie_extended_tag {false} \
   CONFIG.pf0_device_id {8038} \
   CONFIG.pf0_msi_enabled {false} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_1} \
   CONFIG.pf0_msix_cap_table_bir {BAR_1} \
   CONFIG.pl_link_cap_max_link_speed {8.0_GT/s} \
   CONFIG.pl_link_cap_max_link_width {X8} \
   CONFIG.plltype {QPLL1} \
   CONFIG.xdma_axi_intf_mm {AXI_Memory_Mapped} \
 ] $xdma

  # Create instance: xdma_clk_buf, and set properties
  set xdma_clk_buf [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 xdma_clk_buf ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
 ] $xdma_clk_buf

  # Create interface connections
  connect_bd_intf_net -intf_net CLK_IN_D_0_1 [get_bd_intf_ports xdma_clk] [get_bd_intf_pins xdma_clk_buf/CLK_IN_D]
  connect_bd_intf_net -intf_net S_AXIS_S2MM_0_1 [get_bd_intf_ports S_AXIS_0] [get_bd_intf_pins dma_to_ddr/S_AXIS_S2MM]
connect_bd_intf_net -intf_net [get_bd_intf_nets S_AXIS_S2MM_0_1] [get_bd_intf_ports S_AXIS_0] [get_bd_intf_pins ila_all_in_one/SLOT_0_AXIS]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins ddr_router/S01_AXI] [get_bd_intf_pins dma_to_ddr/M_AXI_S2MM]
  connect_bd_intf_net -intf_net axi_smc1_M00_AXI [get_bd_intf_ports M_AXI_LITE_0] [get_bd_intf_pins control_router/M00_AXI]
  connect_bd_intf_net -intf_net axi_smc1_M01_AXI [get_bd_intf_pins control_router/M01_AXI] [get_bd_intf_pins dma_to_ddr/S_AXI_LITE]
  connect_bd_intf_net -intf_net axi_smc_M00_AXI [get_bd_intf_pins ddr4_0/C0_DDR4_S_AXI] [get_bd_intf_pins ddr_router/M00_AXI]
  connect_bd_intf_net -intf_net control_router_M02_AXI [get_bd_intf_pins Hmc7044Ctrl_0/user] [get_bd_intf_pins control_router/M02_AXI]
  connect_bd_intf_net -intf_net control_router_M03_AXI [get_bd_intf_pins AdiSpiCtrl_0/user] [get_bd_intf_pins control_router/M03_AXI]
  connect_bd_intf_net -intf_net control_router_M04_AXI [get_bd_intf_pins control_router/M04_AXI] [get_bd_intf_pins jesd204_0/s_axi]
  connect_bd_intf_net -intf_net ddr4_0_C0_DDR4 [get_bd_intf_ports ddr4_rtl_0] [get_bd_intf_pins ddr4_0/C0_DDR4]
  connect_bd_intf_net -intf_net dma_to_ddr_M_AXI_SG [get_bd_intf_pins ddr_router/S02_AXI] [get_bd_intf_pins dma_to_ddr/M_AXI_SG]
  connect_bd_intf_net -intf_net jesd204_0_m_axis_rx [get_bd_intf_ports jesd204_rx_data] [get_bd_intf_pins jesd204_0/m_axis_rx]
connect_bd_intf_net -intf_net [get_bd_intf_nets jesd204_0_m_axis_rx] [get_bd_intf_ports jesd204_rx_data] [get_bd_intf_pins jesd204_ila/SLOT_0_AXIS]
  connect_bd_intf_net -intf_net xdma_0_M_AXI [get_bd_intf_pins ddr_router/S00_AXI] [get_bd_intf_pins xdma/M_AXI]
  connect_bd_intf_net -intf_net xdma_0_M_AXI_LITE [get_bd_intf_pins control_router/S00_AXI] [get_bd_intf_pins xdma/M_AXI_LITE]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_ports pcie_mgt_0] [get_bd_intf_pins xdma/pcie_mgt]

  # Create port connections
  connect_bd_net -net AdiSpiCtrl_0_csb [get_bd_ports ad9695_csb] [get_bd_pins AdiSpiCtrl_0/csb]
  connect_bd_net -net AdiSpiCtrl_0_sclk [get_bd_ports ad9695_sclk] [get_bd_pins AdiSpiCtrl_0/sclk]
  connect_bd_net -net Hmc7044Ctrl_0_sclk [get_bd_ports hmc7044_sclk] [get_bd_pins Hmc7044Ctrl_0/sclk]
  connect_bd_net -net Hmc7044Ctrl_0_slen [get_bd_ports hmc7044_slen] [get_bd_pins Hmc7044Ctrl_0/slen]
  connect_bd_net -net Net [get_bd_ports hmc7044_sdata] [get_bd_pins Hmc7044Ctrl_0/sdio]
  connect_bd_net -net Net1 [get_bd_ports ad9695_sdio] [get_bd_pins AdiSpiCtrl_0/sdio]
  connect_bd_net -net axi_resetn_0_1 [get_bd_ports axi_dma_resetn] [get_bd_pins dma_to_ddr/axi_resetn]
  connect_bd_net -net c0_sys_clk_i_0_1 [get_bd_ports ddr4_clk_200M] [get_bd_pins control_router/aclk1] [get_bd_pins ddr4_0/c0_sys_clk_i] [get_bd_pins jesd204_0/drpclk] [get_bd_pins jesd204_0/s_axi_aclk]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk [get_bd_pins ddr4_0/c0_ddr4_ui_clk] [get_bd_pins ddr_reset_300M/slowest_sync_clk] [get_bd_pins ddr_router/aclk]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk_sync_rst [get_bd_pins ddr4_0/c0_ddr4_ui_clk_sync_rst] [get_bd_pins ddr_reset_300M/ext_reset_in]
  connect_bd_net -net ddr4_0_c0_init_calib_complete [get_bd_ports ddr4_done] [get_bd_pins ddr4_0/c0_init_calib_complete]
  connect_bd_net -net ddr4_rst_1 [get_bd_ports ddr4_rst] [get_bd_pins ddr4_0/sys_rst]
  connect_bd_net -net glblclk_n_0_1 [get_bd_ports jesd204_glblclk_n] [get_bd_pins jesd204_0/glblclk_n]
  connect_bd_net -net glblclk_p_0_1 [get_bd_ports jesd204_glblclk_p] [get_bd_pins jesd204_0/glblclk_p]
  connect_bd_net -net hmc_7044_gpio4_1 [get_bd_ports hmc7044_gpio4] [get_bd_pins ila_all_in_one/probe1]
  connect_bd_net -net jesd204_0_common0_qpll0_lock_out [get_bd_pins ila_all_in_one/probe6] [get_bd_pins jesd204_0/common0_qpll0_lock_out]
  connect_bd_net -net jesd204_0_rx_aresetn [get_bd_ports jesd204_rx_rstn] [get_bd_pins jesd204_0/rx_aresetn] [get_bd_pins jesd204_ila/resetn]
  connect_bd_net -net jesd204_0_rx_core_clk_out1 [get_bd_ports jesd204_rx_clk] [get_bd_pins ddr_router/aclk2] [get_bd_pins jesd204_0/rx_core_clk_out] [get_bd_pins jesd204_ila/clk]
  connect_bd_net -net jesd204_0_rx_end_of_frame [get_bd_pins jesd204_0/rx_end_of_frame] [get_bd_pins jesd204_ila/probe1]
  connect_bd_net -net jesd204_0_rx_end_of_multiframe [get_bd_pins jesd204_0/rx_end_of_multiframe] [get_bd_pins jesd204_ila/probe3]
  connect_bd_net -net jesd204_0_rx_start_of_frame [get_bd_pins jesd204_0/rx_start_of_frame] [get_bd_pins jesd204_ila/probe0]
  connect_bd_net -net jesd204_0_rx_start_of_multiframe [get_bd_pins jesd204_0/rx_start_of_multiframe] [get_bd_pins jesd204_ila/probe2]
  connect_bd_net -net jesd204_0_rx_sync [get_bd_ports jesd204_rx_sync] [get_bd_pins ila_all_in_one/probe7] [get_bd_pins jesd204_0/rx_sync]
  connect_bd_net -net probe0_0_1 [get_bd_ports reset_probe] [get_bd_pins ila_all_in_one/probe0]
  connect_bd_net -net probe2_0_1 [get_bd_ports hmc7044_gpio3] [get_bd_pins ila_all_in_one/probe2]
  connect_bd_net -net probe3_0_1 [get_bd_ports ad9695_gpio_a0] [get_bd_pins ila_all_in_one/probe3]
  connect_bd_net -net probe4_0_1 [get_bd_ports ad9695_gpio_b0] [get_bd_pins ila_all_in_one/probe4]
  connect_bd_net -net refclk_n_0_1 [get_bd_ports jesd204_refclk_n] [get_bd_pins jesd204_0/refclk_n]
  connect_bd_net -net refclk_p_0_1 [get_bd_ports jesd204_refclk_p] [get_bd_pins jesd204_0/refclk_p]
  connect_bd_net -net rst_ddr4_0_300M_peripheral_aresetn [get_bd_pins ddr4_0/c0_ddr4_aresetn] [get_bd_pins ddr_reset_300M/peripheral_aresetn]
  connect_bd_net -net rx_reset_0_1 [get_bd_ports jesd204_rx_reset] [get_bd_pins ila_all_in_one/probe8] [get_bd_pins jesd204_0/rx_reset]
  connect_bd_net -net rx_sysref_0_1 [get_bd_ports jesd204_rx_sysref] [get_bd_pins ila_all_in_one/probe5] [get_bd_pins jesd204_0/rx_sysref]
  connect_bd_net -net rxn_0_1 [get_bd_ports jesd204_rxn] [get_bd_pins jesd204_0/rxn]
  connect_bd_net -net rxp_0_1 [get_bd_ports jesd204_rxp] [get_bd_pins jesd204_0/rxp]
  connect_bd_net -net s_axi_aresetn_0_1 [get_bd_ports jesd204_aresetn] [get_bd_pins jesd204_0/s_axi_aresetn]
  connect_bd_net -net sys_rst_n_0_1 [get_bd_ports xdma_rstn] [get_bd_pins xdma/sys_rst_n]
  connect_bd_net -net util_ds_buf_0_IBUF_DS_ODIV2 [get_bd_pins xdma/sys_clk] [get_bd_pins xdma_clk_buf/IBUF_DS_ODIV2]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins xdma/sys_clk_gt] [get_bd_pins xdma_clk_buf/IBUF_OUT]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins AdiSpiCtrl_0/reset] [get_bd_pins Hmc7044Ctrl_0/reset] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xdma_0_axi_aclk [get_bd_ports xdma_data_clk] [get_bd_pins AdiSpiCtrl_0/clk] [get_bd_pins Hmc7044Ctrl_0/clk] [get_bd_pins control_router/aclk] [get_bd_pins ddr_router/aclk1] [get_bd_pins dma_to_ddr/m_axi_s2mm_aclk] [get_bd_pins dma_to_ddr/m_axi_sg_aclk] [get_bd_pins dma_to_ddr/s_axi_lite_aclk] [get_bd_pins ila_all_in_one/clk] [get_bd_pins xdma/axi_aclk]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_ports xdma_data_rstn] [get_bd_pins control_router/aresetn] [get_bd_pins ddr_router/aresetn] [get_bd_pins ila_all_in_one/resetn] [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins xdma/axi_aresetn]
  connect_bd_net -net xdma_0_user_lnk_up [get_bd_ports pcie_done] [get_bd_pins xdma/user_lnk_up]

  # Create address segments
  create_bd_addr_seg -range 0x000100000000 -offset 0x00000000 [get_bd_addr_spaces dma_to_ddr/Data_SG] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x000100000000 -offset 0x00000000 [get_bd_addr_spaces dma_to_ddr/Data_S2MM] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x00010000 -offset 0x00030000 [get_bd_addr_spaces xdma/M_AXI_LITE] [get_bd_addr_segs AdiSpiCtrl_0/user/reg0] SEG_AdiSpiCtrl_0_reg0
  create_bd_addr_seg -range 0x00010000 -offset 0x00020000 [get_bd_addr_spaces xdma/M_AXI_LITE] [get_bd_addr_segs Hmc7044Ctrl_0/user/reg0] SEG_Hmc7044Ctrl_0_reg0
  create_bd_addr_seg -range 0x00010000 -offset 0x00000000 [get_bd_addr_spaces xdma/M_AXI_LITE] [get_bd_addr_segs M_AXI_LITE_0/Reg] SEG_M_AXI_LITE_0_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x00010000 [get_bd_addr_spaces xdma/M_AXI_LITE] [get_bd_addr_segs dma_to_ddr/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg
  create_bd_addr_seg -range 0x000100000000 -offset 0x00000000 [get_bd_addr_spaces xdma/M_AXI] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK
  create_bd_addr_seg -range 0x00010000 -offset 0x00040000 [get_bd_addr_spaces xdma/M_AXI_LITE] [get_bd_addr_segs jesd204_0/s_axi/Reg] SEG_jesd204_0_Reg


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_XDMA()
cr_bd_XDMA ""
set_property IS_MANAGED "0" [get_files XDMA.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files XDMA.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files XDMA.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcku060-ffva1156-2-i -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xcku060-ffva1156-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcku060-ffva1156-2-i -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs impl_1]
set_property -name "part" -value "xcku060-ffva1156-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_2' run (if not found)
if {[string equal [get_runs -quiet impl_2] ""]} {
    create_run -name impl_2 -part xcku060-ffva1156-2-i -flow {Vivado Implementation 2018} -strategy "Performance_ExtraTimingOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExtraTimingOpt" [get_runs impl_2]
  set_property flow "Vivado Implementation 2018" [get_runs impl_2]
}
set obj [get_runs impl_2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_2_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_2_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_2_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_io_0] "" ] } {
  create_report_config -report_name impl_2_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_2_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_2_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_2_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_2_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'impl_2_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_2_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_2_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_2_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_2_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_power_0] "" ] } {
  create_report_config -report_name impl_2_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_2_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_2_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_2_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_2_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'impl_2_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_2_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_2_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs impl_2]
set_property -name "part" -value "xcku060-ffva1156-2-i" -objects $obj
set_property -name "strategy" -value "Performance_ExtraTimingOpt" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraTimingOpt" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_2]

puts "INFO: Project created:${_xil_proj_name_}"
